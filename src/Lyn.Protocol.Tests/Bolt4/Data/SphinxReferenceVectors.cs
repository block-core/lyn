using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Lyn.Types.Fundamental;

namespace Lyn.Protocol.Tests.Bolt4.Data
{
    public static class SphinxReferenceVectors
    {
        public static byte[] InvalidVersionPayload => new[] { (byte)0x00 };
        public static List<byte[]> ExpectedEphemeralKeys = new List<byte[]>() {
            Convert.FromHexString("02eec7245d6b7d2ccb30380bfbe2a3648cd7a942653f5aa340edcea1f283686619"),
            Convert.FromHexString("028f9438bfbf7feac2e108d677e3a82da596be706cc1cf342b75c7b7e22bf4e6e2"),
            Convert.FromHexString("03bfd8225241ea71cd0843db7709f4c222f62ff2d4516fd38b39914ab6b83e0da0"),
            Convert.FromHexString("031dde6926381289671300239ea8e57ffaf9bebd05b9a5b95beaf07af05cd43595"),
            Convert.FromHexString("03a214ebd875aab6ddfd77f22c5e7311d7f77f17a169e599f157bbcdae8bf071f4")
        };

        public static List<byte[]> ExpectedEphemeralSecrets = new List<byte[]>() {
            Convert.FromHexString("53eb63ea8a3fec3b3cd433b85cd62a4b145e1dda09391b348c4e1cd36a03ea66"),
            Convert.FromHexString("a6519e98832a0b179f62123b3567c106db99ee37bef036e783263602f3488fae"),
            Convert.FromHexString("3a6b412548762f0dbccce5c7ae7bb8147d1caf9b5471c34120b30bc9c04891cc"),
            Convert.FromHexString("21e13c2d7cfe7e18836df50872466117a295783ab8aab0e7ecc8c725503ad02d"),
            Convert.FromHexString("b5756b9b542727dbafc6765a49488b023a725d631af688fc031217e90770c328")
        };

        public static (byte[], int)[] PaylodLengths = new (byte[], int)[] {
            (Convert.FromHexString("01"), 34),
            (Convert.FromHexString("08"), 41),
            (Convert.FromHexString("fc"), 285),
            (Convert.FromHexString("fd00fd"), 288),
            (Convert.FromHexString("fdffff"), 65570)
        };

        public static PrivateKey SessionKey = new PrivateKey(Convert.FromHexString("4141414141414141414141414141414141414141414141414141414141414141"));

        public static List<PrivateKey> PrivateKeys = new List<PrivateKey>() {
            new PrivateKey(Convert.FromHexString("4141414141414141414141414141414141414141414141414141414141414141")),
            new PrivateKey(Convert.FromHexString("4242424242424242424242424242424242424242424242424242424242424242")),
            new PrivateKey(Convert.FromHexString("4343434343434343434343434343434343434343434343434343434343434343")),
            new PrivateKey(Convert.FromHexString("4444444444444444444444444444444444444444444444444444444444444444")),
            new PrivateKey(Convert.FromHexString("4545454545454545454545454545454545454545454545454545454545454545"))
        };

        public static List<PublicKey> PublicKeys = new List<PublicKey>() {
            new PublicKey(Convert.FromHexString("02eec7245d6b7d2ccb30380bfbe2a3648cd7a942653f5aa340edcea1f283686619")),
            new PublicKey(Convert.FromHexString("0324653eac434488002cc06bbfb7f10fe18991e35f9fe4302dbea6d2353dc0ab1c")),
            new PublicKey(Convert.FromHexString("027f31ebc5462c1fdce1b737ecff52d37d75dea43ce11c74d25aa297165faa2007")),
            new PublicKey(Convert.FromHexString("032c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991")),
            new PublicKey(Convert.FromHexString("02edabbd16b41c8371b92ef2f04c1185b4f03b6dcd52ba9b78d9d7c89c8f221145"))
        };

        // origin -> node #0 -> node #1 -> node #2 -> node #3 -> node #4
        public static List<byte[]> ReferencePaymentPayloads = new List<byte[]>() {
            Convert.FromHexString("1202023a98040205dc06080000000000000001"),
            Convert.FromHexString("52020236b00402057806080000000000000002fd02013c0102030405060708090a0b0c0d0e0f0102030405060708090a0b0c0d0e0f0102030405060708090a0b0c0d0e0f0102030405060708090a0b0c0d0e0f"),
            Convert.FromHexString("12020230d4040204e206080000000000000003"),
            Convert.FromHexString("1202022710040203e806080000000000000004"),
            Convert.FromHexString("fd011002022710040203e8082224a33562c54507a9334e79f0dc4f17d407e6d7c61f0e2f3d0d38599502f617042710fd012de02a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a")
        };

        // This test vector uses multiple payloads to fill the whole onion packet.
        // origin -> node #0 -> node #1 -> node #2 -> node #3 -> node #4
        public static List<byte[]> PaymentPayloadsFull = new List<byte[]>() {
            Convert.FromHexString("8b09000000000000000030000000000000000000000000000000000000000000000000000000000025000000000000000000000000000000000000000000000000250000000000000000000000000000000000000000000000002500000000000000000000000000000000000000000000000025000000000000000000000000000000000000000000000000"),
            Convert.FromHexString("fd012a
            Convert.FromHexString("620800000000000000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
            Convert.FromHexString("fc
            Convert.FromHexString("fd
        };

        public static List<byte[]> OneHopPaymentPayload = new List<byte[]>() {
            Convert.FromHexString("fd04f
        };

        public static byte[] AssociatedData = Convert.FromHexString("4242424242424242424242424242424242424242424242424242424242424242");

        public static byte[] GenerateFiller_ExpectedFiller = Convert.FromHexString("51c30cc8f20da0153ca3839b850bcbc8fefc7fd84802f3e78cb35a660e747b57aa5b0de555cbcf1e6f044a718cc34219b96597f3684eee7a0232e1754f638006cb15a14788217abdf1bdd67910dc1ca74a05dcce8b5ad841b0f939fca8935f6a3ff660e0efb409f1a24ce4aa16fc7dc074cd84422c10cc4dd4fc150dd6d1e4f50b36ce10fef29248dd0cec85c72eb3e4b2f4a7c03b5c9e0c9dd12976553ede3d0e295f842187b33ff743e6d685075e98e1bcab8a46bff0102ca8b2098ae91798d370b01ca7076d3d626952a03663fe8dc700d1358263b73ba30e36731a0b72092f8d5bc8cd346762e93b2bf203d00264e4bc136fc142de8f7b69154deb05854ea88e2d7506222c95ba1aab06");
    }
}
