name: Build

on: 
  push:
    branches:
      - master
      - make-nuget-pkgs
  repository_dispatch:
    types: [build]
  workflow_dispatch:

jobs:
  
  buildAndUnitTest:

    runs-on: ubuntu-latest
    
    env:
      SOLUTION_PATH: 'src/Lyn.sln'
      BUILD_CONFIGURATION: 'Release'

    steps:

    - uses: actions/checkout@v2
      name: Checkout
      
    # - name: Setup Node.js (12.x)
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: 12.x

    # - name: Variables
    #   run: |
    #     echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
    #   shell: bash

    - name: Get Build Version
      run: |
        [xml]$propscontents = Get-Content -Path "..\src\Directory.build.props";
        echo "VERSION=$propscontents.Project.PropertyGroup.Version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh

    # - name: Setup .NET Core
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: '3.1.101' 
    
    - name: Unit Test
      run: dotnet test -v=normal --no-build --configuration ${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_PATH}}

    - name: Nuget Pack
      run: dotnet pack --configuration ${{env.BUILD_CONFIGURATION}} --output "${{github.workspace}}/package/" ${{env.SOLUTION_PATH}}

    - uses: actions/upload-artifact@v2
      if: matrix.os == 'ubuntu-latest'
      with:
        name: Lyn-${{env.VERSION}}-preview
        path: "${{github.workspace}}/package/"

    - name: Release
      if: matrix.os == 'ubuntu-latest'
      uses: sondreb/action-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        verbose: true
        folder: "${{github.workspace}}/package/"
        draft: true
        prerelease: false
        body: ''
        name: "Lyn ${{env.VERSION}}"
        tag: ${{env.VERSION}}
